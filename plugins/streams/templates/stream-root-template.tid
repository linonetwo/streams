title: $:/plugins/sq/streams/templates/stream-root-template

\whitespace trim
<$vars dropTargetTiddler=<<currentTiddler>> >
	<$list filter="[list[!!stream-list]!is[missing]]">
		<$let
			enable-dnd={{{ [<enable-dnd>match[no]] ~[<drag-title-state>get[text]match<currentTiddler>then[no]] }}}
			row-children-visibility-state={{{ [[$:/state/sq/streams/visibility/]addsuffix<currentTiddler>] }}}
		>
		<!-- row-children-visibility-state should be a macro or subfilter for reuse in action macros, will also make it easier to switch between state and persistent tiddlers-->
			{{||$:/plugins/sq/streams/templates/stream-row-template}}
		</$let>
	</$list>
	<$tiddler tiddler="">
		<!-- to drop after the last child of any list level-->
		<$droppable
			actions=<<stream-drop-actions>>
			tag="div"
			enable=<<enable-dnd>>
			class="stream-droppable stream-droppable-terminal"
			disabledClass="stream-node-disabled"
		>
<!-- idea only want below div with height when its a child with no more children-->
			<$list filter="[<currentTiddler>!has[stream-list]]" variable="_NULL"><div class="stream-droppable-spacer"/></$list>
		</$droppable>
	</$tiddler>
</$vars>